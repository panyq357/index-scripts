
include: "rules/download.smk"


rule all:
    input:
        "rawdata/TAIR10_functional_descriptions",
        ["results/genome/at.tair10.genome.fa" + suffix for suffix in [".amb", ".ann", ".bwt", ".pac", ".sa"]],
        "results/star_index",
        "results/custom_bed/transcript.bed"


rule genome:
    input:
        "rawdata/TAIR10_chr_all.fas.gz"
    output:
        fa = "results/genome/at.tair10.genome.fa",
        fai = "results/genome/at.tair10.genome.fa.fai",
        dict = "results/genome/at.tair10.genome.dict"
    shell:
        '''
        gzip -dc {input} | sed -E "s/^>(Chr[12345CM]).*/>\\1/" > {output.fa}
        samtools faidx {output.fa}
        gatk CreateSequenceDictionary -R {output.fa}
        '''


rule bwa:
    input:
        "results/genome/at.tair10.genome.fa",
    output:
        ["results/genome/at.tair10.genome.fa" + suffix for suffix in [".amb", ".ann", ".bwt", ".pac", ".sa"]]
    shell:
        "bwa index {input}"


rule make_gtf:
    input:
        raw_gff = "rawdata/TAIR10_GFF3_genes.gff"
    output:
        new_gtf = "results/gtf/at.tair10.make.gtf"
    script:
        "scripts/make_gtf.R"


rule star_index:
    input:
        fa = "results/genome/at.tair10.genome.fa",
        gtf = "results/gtf/at.tair10.make.gtf"
    output:
        star_index = directory("results/star_index")
    threads:
        20
    shell:
        '''
        STAR \
            --runThreadN {threads} \
            --runMode genomeGenerate \
            --genomeDir {output.star_index} \
            --genomeFastaFiles {input.fa} \
            --sjdbGTFfile {input.gtf} \
            --genomeSAindexNbases 12  # Adjusted base on STAR's warning.
        '''

rule custom_bed:
    input:
        gtf = "results/gtf/at.tair10.make.gtf"
    output:
        transcript = "results/custom_bed/transcript.bed",
        gene = "results/custom_bed/gene.bed"
    script:
        "scripts/custom_bed.R"

