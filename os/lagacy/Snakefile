rule all:
    input:
        ["results/genome/os.build4.genome.fa", "results/genome/os.build5.genome.fa"]

rule download_build4_genome:
    output:
        directory("rawdata/OsGenome_RAP2")
    params:
        url = "https://rapdb.dna.affrc.go.jp/download/archive/build4/OsGenome_RAP2.tar.gz"
    shell:
        '''
        mkdir -p rawdata ; cd rawdata
        wget {params.url}
        tar -xf OsGenome_RAP2.tar.gz
        '''


rule make_build4_genome:
    input:
        "rawdata/OsGenome_RAP2"
    output:
        fa = "results/genome/os.build4.genome.fa",
        fai = "results/genome/os.build4.genome.fa.fai",
        dict = "results/genome/os.build4.genome.dict"
    shell:
        '''
        cat {input}/chr{{01..12}}.seq.masked > {output.fa}
        samtools faidx {output.fa}
        gatk CreateSequenceDictionary -R {output.fa}
        '''

rule download_build5_genome:
    output:
        "rawdata/IRGSPb5.fa.masked.gz"
    params:
        url = "https://rapdb.dna.affrc.go.jp/download/archive/build5/IRGSPb5.fa.masked.gz"
    shell:
        '''
        mkdir -p rawdata ; cd rawdata
        wget {params.url}
        '''

rule make_build5_genome:
    input:
        "rawdata/IRGSPb5.fa.masked.gz"
    output:
        fa = "results/genome/os.build5.genome.fa",
        fai = "results/genome/os.build5.genome.fa.fai",
        dict = "results/genome/os.build5.genome.dict"
    shell:
        '''
        zcat {input} | sed -E 's/build05r1.fasta//g' > {output.fa}
        samtools faidx {output.fa}
        gatk CreateSequenceDictionary -R {output.fa}
        '''
